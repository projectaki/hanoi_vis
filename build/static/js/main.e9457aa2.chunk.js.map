{"version":3,"sources":["BackEnd/algorithm.js","FrontEnd/hanoi.jsx","App.js","reportWebVitals.js","index.js"],"names":["hanoi","n","moves","hanoiRecurse","from","buffer","to","push","Hanoi","props","state","tower1","this","refresh","numberOfDisks","disks","i","createDisks","setState","elems","document","getElementsByClassName","console","log","style","backgroundColor","margin","boxShadow","t1h","t2h","t3h","length","pair","getBlockId","style1","style2","shiftDisk","delay","className","map","block","id","width","height","onClick","setUpDisks","runPuzzle","React","Component","tower","t1","t2","t3","toSwap","Promise","done","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e9457aa2.chunk.js","sourcesContent":["export const hanoi = (n) => {\r\n    const moves = [];\r\n    hanoiRecurse(n, 1, 2, 3, moves);\r\n    return moves;\r\n}\r\n\r\nexport const hanoiRecurse = (n, from, buffer, to, moves) => {\r\n    \r\n    if (n === 1) {\r\n        moves.push([from, to]);\r\n        return;\r\n    }\r\n    hanoiRecurse(n-1, from, to, buffer, moves);\r\n    moves.push([from, to]);\r\n    hanoiRecurse(n-1, buffer, from, to, moves);\r\n    return moves;\r\n\r\n}","import React from \"react\";\r\nimport { hanoi } from \"../BackEnd/algorithm\";\r\n\r\nimport \"./hanoi.css\";\r\n\r\nconst DISK_NUMBER = 5;\r\n\r\nexport default class Hanoi extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tower1 : [],\r\n\r\n        \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n        \r\n    }\r\n\r\n    refresh() {\r\n        const tower1 = createDisks(DISK_NUMBER);\r\n        this.setState({tower1});\r\n\r\n    }\r\n\r\n    setUpDisks(n) {\r\n        const elems = document.getElementsByClassName(\"emptyblock\");\r\n        for(let i = 0; i < DISK_NUMBER; i++) {\r\n            console.log(elems[i]);\r\n            elems[i].style.backgroundColor = \"brown\";\r\n            elems[i].style.margin = \"auto\";\r\n            elems[i].style.boxShadow = \"0 0 0 2px black\";\r\n        }\r\n    }\r\n\r\n    async runPuzzle() {\r\n        const elems = document.getElementsByClassName(\"emptyblock\");\r\n        let t1h = DISK_NUMBER;\r\n        let t2h = 0;\r\n        let t3h = 0;\r\n        const moves = hanoi(DISK_NUMBER);\r\n        console.log(moves);\r\n        for (let i = 0; i < moves.length; i++) {\r\n            console.log(t1h, t2h, t3h);\r\n            const pair = moves[i];\r\n            \r\n            const from =  getBlockId(pair[0],DISK_NUMBER,t1h,t2h,t3h);\r\n            const to =  getBlockId(pair[1],DISK_NUMBER,t1h,t2h,t3h) - 1;\r\n            let style1 = elems[from].style;\r\n            let style2 = elems[to].style;\r\n            shiftDisk(style1,style2);\r\n            if (pair[0] === 1) t1h -= 1;\r\n            if (pair[0] === 2) t2h -= 1;\r\n            if (pair[0] === 3) t3h -= 1;\r\n            if (pair[1] === 1) t1h += 1;\r\n            if (pair[1] === 2) t2h += 1;\r\n            if (pair[1] === 3) t3h += 1;\r\n            \r\n            await delay(500);\r\n            \r\n    \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        const {tower1} = this.state;\r\n        \r\n        return (\r\n            \r\n            <>\r\n                \r\n                <div className=\"container\">\r\n                    <div className=\"towercont\">\r\n                        {tower1.map((block, id) => {\r\n                            return <div key={id} className=\"emptyblock\" style={{width: `${block * 20}px`, height: `10px`}}></div>\r\n                        })}\r\n                    </div>\r\n                    <div className=\"towercont\">\r\n                        {tower1.map((block, id) => {\r\n                            return <div key={id} className=\"emptyblock\" style={{width: `${block * 20}px`, height: `10px`}}></div>\r\n                        })}\r\n                    </div>\r\n                    <div className=\"towercont\">\r\n                        {tower1.map((block, id) => {\r\n                            return <div key={id} className=\"emptyblock\" style={{width: `${block * 20}px`, height: `10px`}}></div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <button onClick={() => this.setUpDisks(7)}>setup</button>\r\n                <button onClick={() => this.runPuzzle()}>Solve</button>\r\n\r\n                \r\n                \r\n                \r\n                \r\n            </>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\nfunction getBlockId(tower, n, t1, t2, t3) {\r\n\r\n        let toSwap = tower * n;\r\n        if (tower === 1) toSwap -= t1;\r\n        if (tower === 2) toSwap -= t2;\r\n        if (tower === 3) toSwap -= t3;\r\n        return toSwap;\r\n}\r\n\r\nfunction createDisks(numberOfDisks) {\r\n    const disks = [];\r\n    for (let i = 0; i < numberOfDisks; i++) {\r\n        disks.push(i + 2);\r\n    }\r\n    return disks;\r\n}\r\n\r\nfunction shiftDisk(style1, style2) {\r\n        \r\n        style2.width = style1.width;\r\n        style2.height = style1.height;\r\n        style2.backgroundColor = style1.backgroundColor;\r\n        style2.margin = style1.margin;\r\n        style2.boxShadow = style1.boxShadow;\r\n        style1.backgroundColor = \"white\";\r\n        style1.boxShadow = \"0 0 0 0px black\";\r\n}\r\n\r\n\r\nfunction delay(n) {  \r\n    n = n || 2000;\r\n    return new Promise(done => {\r\n      setTimeout(() => {\r\n        done();\r\n      }, n);\r\n    });\r\n  }","import Hanoi from \"./FrontEnd/hanoi.jsx\";\n\nfunction App() {\n  return (\n    <Hanoi>\n      \n    </Hanoi>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}