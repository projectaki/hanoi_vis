{"version":3,"sources":["BackEnd/algorithm.js","FrontEnd/hanoi.jsx","FrontEnd/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["hanoi","n","moves","hanoiRecurse","from","buffer","to","push","Hanoi","props","state","tower1","terminate","running","this","refresh","numberOfDisks","disks","i","createDisks","setState","elems","document","getElementsByClassName","length","wide","style","width","resetBoardLengths","backgroundColor","margin","boxShadow","clearBoard","delay","console","log","runPuzzle","t1h","t2h","t3h","pair","getBlockId","style1","style2","shiftDisk","className","class","paddingTop","map","block","id","height","onClick","setUpDisks","solve","React","Component","tower","t1","t2","t3","toSwap","Promise","done","setTimeout","Navbar","textAlign","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b1553b72.chunk.js","sourcesContent":["export const hanoi = (n) => {\r\n    const moves = [];\r\n    hanoiRecurse(n, 1, 2, 3, moves);\r\n    return moves;\r\n}\r\n\r\nexport const hanoiRecurse = (n, from, buffer, to, moves) => {\r\n    \r\n    if (n === 1) {\r\n        moves.push([from, to]);\r\n        return;\r\n    }\r\n    hanoiRecurse(n-1, from, to, buffer, moves);\r\n    moves.push([from, to]);\r\n    hanoiRecurse(n-1, buffer, from, to, moves);\r\n    return moves;\r\n\r\n}","import React from \"react\";\r\nimport { hanoi } from \"../BackEnd/algorithm\";\r\n\r\nimport \"./hanoi.css\";\r\n\r\nconst DISK_NUMBER = 5;\r\n\r\nexport default class Hanoi extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tower1 : [],\r\n            terminate : true,\r\n            running: false,\r\n            \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        // tower1 is array with disk lengths\r\n        const tower1 = createDisks(DISK_NUMBER);\r\n        this.setState({tower1});\r\n    }\r\n\r\n    resetBoardLengths() {\r\n        const elems = document.getElementsByClassName(\"emptyblock\");\r\n        for(let i = 0; i < elems.length; i++) {\r\n            var wide = this.state.tower1[i % DISK_NUMBER];\r\n            elems[i].style.width = wide +\"vw\";\r\n        }\r\n    }\r\n\r\n    clearBoard() {\r\n        this.setState({terminate:true});\r\n        this.resetBoardLengths();\r\n        const elems = document.getElementsByClassName(\"emptyblock\");\r\n        for(let i = 0; i < elems.length; i++) {\r\n            \r\n            elems[i].style.backgroundColor = \"black\";\r\n            elems[i].style.margin = \"auto\";\r\n            elems[i].style.boxShadow = \"0 0 0 0px black\";\r\n        }\r\n        \r\n    }\r\n\r\n    async setUpDisks() {\r\n        this.setState({running: false});\r\n        this.clearBoard();\r\n        await delay(1);\r\n        \r\n        const elems = document.getElementsByClassName(\"emptyblock\");\r\n        for(let i = 0; i < DISK_NUMBER; i++) {\r\n            console.log(elems[i]);\r\n            elems[i].style.backgroundColor = \"brown\";\r\n            elems[i].style.margin = \"auto\";\r\n            elems[i].style.boxShadow = \"0 0 0 0.1vw black\";\r\n        }\r\n    }\r\n\r\n    async solve() {\r\n        if (this.state.running === false) {\r\n            this.setState({running: true});\r\n            this.runPuzzle();\r\n        }\r\n    }\r\n\r\n    async runPuzzle() {\r\n        \r\n        this.setState({terminate:false});\r\n        await delay(1);\r\n        const elems = document.getElementsByClassName(\"emptyblock\");\r\n        let t1h = DISK_NUMBER;\r\n        let t2h = 0;\r\n        let t3h = 0;\r\n        const moves = hanoi(DISK_NUMBER);\r\n        \r\n        for (let i = 0; i < moves.length; i++) {\r\n            if(this.state.terminate === true) {\r\n                this.setState({running: false});\r\n                return;\r\n            }\r\n            \r\n            const pair = moves[i];\r\n            \r\n            const from =  getBlockId(pair[0],DISK_NUMBER,t1h,t2h,t3h);\r\n            const to =  getBlockId(pair[1],DISK_NUMBER,t1h,t2h,t3h) - 1;\r\n            let style1 = elems[from].style;\r\n            let style2 = elems[to].style;\r\n            shiftDisk(style1,style2);\r\n            if (pair[0] === 1) t1h -= 1;\r\n            if (pair[0] === 2) t2h -= 1;\r\n            if (pair[0] === 3) t3h -= 1;\r\n            if (pair[1] === 1) t1h += 1;\r\n            if (pair[1] === 2) t2h += 1;\r\n            if (pair[1] === 3) t3h += 1;\r\n            \r\n            await delay(500);\r\n            \r\n    \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        const {tower1} = this.state;\r\n        \r\n        return (\r\n            \r\n            <>\r\n                <div>\r\n                    <div className=\"tcontainer\">\r\n                        <div class=\"row\" style={{paddingTop: \"10vh\"}}>\r\n\r\n                            <div class=\"col s4\">\r\n                                <div className=\"towercont\">\r\n                                    {tower1.map((block, id) => {\r\n                                        return <div key={id} className=\"emptyblock\" style={{width: `${block }vw`, height: `3vh`}}></div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col s4\">\r\n                                <div className=\"towercont\">\r\n                                    {tower1.map((block, id) => {\r\n                                        return <div key={id} className=\"emptyblock\" style={{width: `${block}vw`, height: `3vh`}}></div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col s4\">\r\n                                <div className=\"towercont\">\r\n                                    {tower1.map((block, id) => {\r\n                                        return <div key={id} className=\"emptyblock\" style={{width: `${block}vw`, height: `3vh`}}></div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                    </div>\r\n                    <div className=\"container\">\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col s4\">\r\n                            <div >\r\n                                <center>\r\n                                    <button className=\"waves-effect waves-light btn\" onClick={() => this.setUpDisks(7)}>setup</button>\r\n                                </center>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col s4\">\r\n                            <div >\r\n                                <center>\r\n                                    <button className=\"waves-effect waves-light btn\" onClick={() => this.solve()}>Solve</button>\r\n                                </center>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col s4\">\r\n                            <div >\r\n                                <center>\r\n                                    <button className=\"waves-effect waves-light btn\" onClick={() => this.clearBoard()}>clear</button>\r\n                                </center>\r\n                                \r\n                            \r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    <div className=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col s12 m12\">\r\n                        <div class=\"card blue-grey \">\r\n                            <div class=\"card-content white-text\">\r\n                            <h4 class=\"resp-head\">Towers of Hanoi Puzzle Description</h4>\r\n                            <p>The Tower of Hanoi (also called the Tower of Brahma or Lucas' Tower[1] and sometimes pluralized as Towers) is a mathematical game or puzzle. It consists of three rods and a number of disks of different sizes, which can slide onto any rod. The puzzle starts with the disks in a neat stack in ascending order of size on one rod, the smallest at the top, thus making a conical shape.\r\n\r\n                                The objective of the puzzle is to move the entire stack to another rod, obeying the following simple rules:\r\n\r\n                                Only one disk can be moved at a time.\r\n                                Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod.\r\n                                No larger disk may be placed on top of a smaller disk.\r\n                                \r\n                                <p className=\"right\">-Wikipedia</p>\r\n                            </p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n\r\n                \r\n                \r\n                \r\n                \r\n            </>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\nfunction getBlockId(tower, n, t1, t2, t3) {\r\n\r\n        let toSwap = tower * n;\r\n        if (tower === 1) toSwap -= t1;\r\n        if (tower === 2) toSwap -= t2;\r\n        if (tower === 3) toSwap -= t3;\r\n        return toSwap;\r\n}\r\n\r\nfunction createDisks(numberOfDisks) {\r\n    const disks = [];\r\n    for (let i = 0; i < numberOfDisks; i++) {\r\n        disks.push(i*3 + 3);\r\n    }\r\n    return disks;\r\n}\r\n\r\nfunction shiftDisk(style1, style2) {\r\n        \r\n        style2.width = style1.width;\r\n        style2.height = style1.height;\r\n        style2.backgroundColor = style1.backgroundColor;\r\n        style2.margin = style1.margin;\r\n        style2.boxShadow = style1.boxShadow;\r\n        style1.backgroundColor = \"black\";\r\n        style1.boxShadow = \"0 0 0 0px black\";\r\n}\r\n\r\n\r\nfunction delay(n) {  \r\n    n = n || 2000;\r\n    return new Promise(done => {\r\n       setTimeout(() => {\r\n        done();\r\n        \r\n      }, n);\r\n    });\r\n  }\r\n\r\n// function clearDelay(tim) {\r\n//     clearTimeout(tim);\r\n// }","import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav>\r\n                    <div class=\"nav-wrapper\" style={{textAlign: \"center\"}}>\r\n                        <p style={{fontSize: \"3vh\"}}>Towers of Hanoi</p>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import Hanoi from \"./FrontEnd/hanoi.jsx\";\nimport Navbar from './FrontEnd/Navbar';\nfunction App() {\n  return (\n    <>\n      <Navbar/>\n      <Hanoi/>\n\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}