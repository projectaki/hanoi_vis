(this.webpackJsonphanoi=this.webpackJsonphanoi||[]).push([[0],{15:function(e,t,n){},17:function(e,t,n){},18:function(e,t,n){"use strict";n.r(t);var s=n(0),a=n(2),r=n.n(a),c=n(9),i=n.n(c),o=(n(15),n(1)),l=n.n(o),h=n(3),u=n(4),d=n(5),j=n(7),b=n(6),p=function(e){var t=[];return v(e,1,2,3,t),t},v=function e(t,n,s,a,r){return t<=1?(r.push([n,a]),r):(e(t-1,n,a,s,r),r.push([n,a]),e(t-1,s,n,a,r),r)},f=(n(17),function(e){Object(j.a)(n,e);var t=Object(b.a)(n);function n(e){var s;return Object(u.a)(this,n),(s=t.call(this,e)).state={tower1:[],terminate:!0,running:!1,input:3},s}return Object(d.a)(n,[{key:"componentDidMount",value:function(){this.refresh(),this.setUpDisks()}},{key:"refresh",value:function(){var e=function(e){for(var t=[],n=0;n<e;n++)t.push(3*n+3);return t}(this.state.input);this.setState({tower1:e})}},{key:"resetBoardLengths",value:function(){for(var e=document.getElementsByClassName("emptyblock"),t=0;t<e.length;t++){var n=this.state.tower1[t%this.state.input];e[t].style.width=n+"vw"}}},{key:"clearBoard",value:function(){this.setState({terminate:!0}),this.resetBoardLengths();for(var e=document.getElementsByClassName("emptyblock"),t=0;t<e.length;t++)e[t].style.backgroundColor="black",e[t].style.margin="auto",e[t].style.boxShadow="0 0 0 0px black"}},{key:"setUpDisks",value:function(){var e=Object(h.a)(l.a.mark((function e(){var t,n;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.setState({running:!1}),this.clearBoard(),e.next=4,O(1);case 4:for(t=document.getElementsByClassName("emptyblock"),n=0;n<this.state.input;n++)t[n].style.backgroundColor="brown",t[n].style.margin="auto",t[n].style.boxShadow="0 0 0 0.1vw black";case 6:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"solve",value:function(){var e=Object(h.a)(l.a.mark((function e(){return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:!1===this.state.running&&(this.setState({running:!0}),this.runPuzzle());case 1:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"runPuzzle",value:function(){var e=Object(h.a)(l.a.mark((function e(){var t,n,s,a,r,c,i,o,h,u,d;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.setState({terminate:!1}),e.next=3,O(1);case 3:t=document.getElementsByClassName("emptyblock"),n=this.state.input,s=0,a=0,r=p(this.state.input),c=0;case 9:if(!(c<r.length)){e.next=30;break}if(!0!==this.state.terminate){e.next=13;break}return this.setState({running:!1}),e.abrupt("return");case 13:return i=r[c],o=m(i[0],this.state.input,n,s,a),h=m(i[1],this.state.input,n,s,a)-1,u=t[o].style,d=t[h].style,x(u,d),1===i[0]&&(n-=1),2===i[0]&&(s-=1),3===i[0]&&(a-=1),1===i[1]&&(n+=1),2===i[1]&&(s+=1),3===i[1]&&(a+=1),e.next=27,O(500);case 27:c++,e.next=9;break;case 30:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"updateInput",value:function(){var e=Object(h.a)(l.a.mark((function e(t){return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.setState({input:t.target.value}),e.next=3,O(1);case 3:this.refresh(),this.clearBoard(),this.render(),this.setUpDisks();case 7:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:"render",value:function(){var e=this,t=this.state.tower1;return Object(s.jsx)(s.Fragment,{children:Object(s.jsxs)("div",{children:[Object(s.jsxs)("div",{className:"container",style:{textAlign:"center"},children:[Object(s.jsx)("label",{htmlFor:"diskRange",class:"form-label",style:{fontSize:"1.5vw"},children:"Number of discs"}),Object(s.jsx)("input",{value:this.state.input,onChange:function(t){return e.updateInput(t)},type:"range",class:"form-range",min:"1",max:"8",step:"1",id:"diskRange",style:{height:"3vh"}}),Object(s.jsx)("div",{className:"white-text",children:this.state.input})]}),Object(s.jsx)("div",{className:"tcontainer",children:Object(s.jsxs)("div",{class:"row",style:{paddingTop:"10vh"},children:[Object(s.jsx)("div",{class:"col s4",children:Object(s.jsx)("div",{className:"towercont",children:t.map((function(e,t){return Object(s.jsx)("div",{className:"emptyblock",style:{width:"".concat(e,"vw"),height:"3vh"}},t)}))})}),Object(s.jsx)("div",{class:"col s4",children:Object(s.jsx)("div",{className:"towercont",children:t.map((function(e,t){return Object(s.jsx)("div",{className:"emptyblock",style:{width:"".concat(e,"vw"),height:"3vh"}},t)}))})}),Object(s.jsx)("div",{class:"col s4",children:Object(s.jsx)("div",{className:"towercont",children:t.map((function(e,t){return Object(s.jsx)("div",{className:"emptyblock",style:{width:"".concat(e,"vw"),height:"3vh"}},t)}))})})]})}),Object(s.jsx)("div",{className:"container",children:Object(s.jsxs)("div",{class:"row",children:[Object(s.jsx)("div",{class:"col s4",children:Object(s.jsx)("div",{children:Object(s.jsx)("center",{children:Object(s.jsx)("button",{className:"waves-effect waves-light btn",onClick:function(){return e.solve()},children:"Solve"})})})}),Object(s.jsx)("div",{class:"col s4",children:Object(s.jsx)("div",{children:Object(s.jsx)("center",{children:Object(s.jsx)("button",{className:"waves-effect waves-light btn",onClick:function(){return e.clearBoard()},children:"clear"})})})}),Object(s.jsx)("div",{class:"col s4",children:Object(s.jsx)("div",{children:Object(s.jsx)("center",{children:Object(s.jsx)("button",{className:"waves-effect waves-light btn",onClick:function(){return e.setUpDisks()},children:"setup"})})})})]})}),Object(s.jsx)("div",{className:"container",children:Object(s.jsx)("div",{class:"row",children:Object(s.jsx)("div",{class:"col s12 m12",children:Object(s.jsx)("div",{class:"card blue-grey ",children:Object(s.jsxs)("div",{class:"card-content white-text",children:[Object(s.jsx)("h4",{class:"resp-head",children:"Towers of Hanoi Puzzle Description"}),Object(s.jsxs)("p",{children:["The Tower of Hanoi (also called the Tower of Brahma or Lucas' Tower[1] and sometimes pluralized as Towers) is a mathematical game or puzzle. It consists of three rods and a number of disks of different sizes, which can slide onto any rod. The puzzle starts with the disks in a neat stack in ascending order of size on one rod, the smallest at the top, thus making a conical shape. The objective of the puzzle is to move the entire stack to another rod, obeying the following simple rules: Only one disk can be moved at a time. Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod. No larger disk may be placed on top of a smaller disk.",Object(s.jsx)("p",{className:"right",children:"-Wikipedia"})]})]})})})})})]})})}}]),n}(r.a.Component));function m(e,t,n,s,a){var r=e*t;return 1===e&&(r-=n),2===e&&(r-=s),3===e&&(r-=a),r}function x(e,t){t.width=e.width,t.height=e.height,t.backgroundColor=e.backgroundColor,t.margin=e.margin,t.boxShadow=e.boxShadow,e.backgroundColor="black",e.boxShadow="0 0 0 0px black"}function O(e){return e=e||2e3,new Promise((function(t){setTimeout((function(){t()}),e)}))}var g=function(e){Object(j.a)(n,e);var t=Object(b.a)(n);function n(){return Object(u.a)(this,n),t.apply(this,arguments)}return Object(d.a)(n,[{key:"render",value:function(){return Object(s.jsx)("div",{children:Object(s.jsx)("nav",{children:Object(s.jsx)("div",{class:"nav-wrapper",style:{textAlign:"center"},children:Object(s.jsx)("p",{style:{fontSize:"3vh"},children:"Towers of Hanoi"})})})})}}]),n}(a.Component);var k=function(){return Object(s.jsxs)(s.Fragment,{children:[Object(s.jsx)(g,{}),Object(s.jsx)(f,{})]})},w=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,19)).then((function(t){var n=t.getCLS,s=t.getFID,a=t.getFCP,r=t.getLCP,c=t.getTTFB;n(e),s(e),a(e),r(e),c(e)}))};i.a.render(Object(s.jsx)(r.a.StrictMode,{children:Object(s.jsx)(k,{})}),document.getElementById("root")),w()}},[[18,1,2]]]);
//# sourceMappingURL=main.0bc4c68d.chunk.js.map