{"version":3,"sources":["BackEnd/algorithm.js","FrontEnd/hanoi.jsx","FrontEnd/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["hanoi","n","moves","hanoiRecurse","from","buffer","to","push","Hanoi","props","state","tower1","terminate","running","input","setup","this","refresh","setUpDisks","numberOfDisks","disks","i","createDisks","setState","delay","elems","document","getElementsByClassName","length","wide","style","width","resetBoardLengths","background","margin","boxShadow","clearBoard","backgroundColor","runPuzzle","t1h","t2h","t3h","pair","getBlockId","style1","style2","shiftDisk","evt","target","value","reset","className","position","padding","href","class","textAlign","htmlFor","fontSize","color","onChange","updateInput","type","min","max","step","id","height","paddingTop","left","zIndex","marginTop","map","block","onClick","solve","React","Component","tower","t1","t2","t3","toSwap","Promise","done","setTimeout","Navbar","classname","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7f80c823.chunk.js","sourcesContent":["export const hanoi = (n) => {\r\n    const moves = [];\r\n    hanoiRecurse(n, 1, 2, 3, moves);\r\n    return moves;\r\n}\r\n\r\nexport const hanoiRecurse = (n, from, buffer, to, moves) => {\r\n    \r\n    if (n <= 1) {\r\n        moves.push([from, to]);\r\n        return moves;\r\n    }   \r\n    hanoiRecurse(n-1, from, to, buffer, moves);\r\n    moves.push([from, to]);\r\n    hanoiRecurse(n-1, buffer, from, to, moves);\r\n    return moves;\r\n    \r\n    \r\n\r\n}","import React from \"react\";\r\nimport { hanoi } from \"../BackEnd/algorithm\";\r\n\r\nimport \"./hanoi.css\";\r\n\r\n\r\nexport default class Hanoi extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tower1 : [],\r\n            terminate : true,\r\n            running: false,\r\n            input: 3,\r\n            setup: true\r\n            \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n        this.setUpDisks();\r\n    }\r\n\r\n    refresh() {\r\n        // tower1 is array with disk lengths\r\n        const tower1 = createDisks(this.state.input);\r\n        this.setState({tower1});\r\n    }\r\n\r\n    // terminate the running loop and reset\r\n    async reset() {\r\n        this.setState({terminate:true});\r\n        await delay(1);\r\n        this.refresh();\r\n        await delay(1);\r\n        this.setUpDisks();\r\n        this.setState({setup: true});\r\n    }\r\n\r\n    // reset div lengths\r\n    resetBoardLengths() {\r\n        const elems = document.getElementsByClassName(\"emptyblock\");\r\n        for(let i = 0; i < elems.length; i++) {\r\n            var wide = this.state.tower1[i % this.state.input];\r\n            elems[i].style.width = wide +\"vw\";\r\n        }\r\n    }\r\n\r\n    // empty the board of colors\r\n    clearBoard() {\r\n        this.resetBoardLengths();\r\n        const elems = document.getElementsByClassName(\"emptyblock\");\r\n        for(let i = 0; i < elems.length; i++) {\r\n            \r\n            elems[i].style.background = \"transparent\";\r\n            elems[i].style.margin = \"auto\";\r\n            elems[i].style.boxShadow = \"0 0 0 0px black\";\r\n        }\r\n        \r\n    }\r\n\r\n    // set up the discs\r\n    async setUpDisks() {\r\n        //this.setState({running: false});\r\n        this.clearBoard();\r\n        await delay(1);\r\n        \r\n        const elems = document.getElementsByClassName(\"emptyblock\");\r\n        for(let i = 0; i < this.state.input; i++) {\r\n            \r\n            elems[i].style.backgroundColor = \"brown\";\r\n            elems[i].style.margin = \"auto\";\r\n            elems[i].style.boxShadow = \"0 0 0 0.3vmin black\";\r\n        }\r\n    }\r\n\r\n    // if no functiuon is running then run the function\r\n    async solve() {\r\n        \r\n        if (this.state.running === false && this.state.setup === true) {\r\n            \r\n            this.setState({running: true, setup: false});\r\n            this.runPuzzle();\r\n        }\r\n    }\r\n\r\n    async runPuzzle() {\r\n        \r\n        this.setState({terminate:false});\r\n        await delay(1);\r\n        const elems = document.getElementsByClassName(\"emptyblock\");\r\n        let t1h = this.state.input;\r\n        let t2h = 0;\r\n        let t3h = 0;\r\n        const moves = hanoi(this.state.input);\r\n        \r\n        \r\n        for (let i = 0; i < moves.length; i++) {\r\n            if(this.state.terminate === true) {\r\n                this.setState({running: false});\r\n                return;\r\n            }\r\n            \r\n            const pair = moves[i];\r\n            \r\n            const from =  getBlockId(pair[0],this.state.input,t1h,t2h,t3h);\r\n            const to =  getBlockId(pair[1],this.state.input,t1h,t2h,t3h) - 1;\r\n            let style1 = elems[from].style;\r\n            let style2 = elems[to].style;\r\n            shiftDisk(style1,style2);\r\n            if (pair[0] === 1) t1h -= 1;\r\n            if (pair[0] === 2) t2h -= 1;\r\n            if (pair[0] === 3) t3h -= 1;\r\n            if (pair[1] === 1) t1h += 1;\r\n            if (pair[1] === 2) t2h += 1;\r\n            if (pair[1] === 3) t3h += 1;\r\n            \r\n            await delay(500);\r\n            \r\n    \r\n        }\r\n        \r\n        await delay(1);\r\n        this.setState({running: false});\r\n        \r\n    }\r\n\r\n    async updateInput(evt) {\r\n        this.setState({input: evt.target.value});\r\n        await delay(1);\r\n        this.reset();\r\n    }\r\n\r\n    render() {\r\n        const {tower1} = this.state;\r\n        \r\n        return (\r\n            \r\n            <>\r\n                <div>\r\n                    \r\n                    <div className=\"back-btn\" style={{position: \"absolute\", padding: 0, margin: 0}}>\r\n                        <a href=\"https://projectaki.github.io/portfolio_akos_madarasz/#/Projects\"  >\r\n                            <i class=\"fas fa-arrow-left fa-2x\"></i>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"container\" style={{textAlign: \"center\"}}>\r\n                    <label htmlFor=\"diskRange\" class=\"form-label\" style={{fontSize: \"2vw\", color: \"white\"}}>Number of discs</label>\r\n                    <input value={this.state.input} onChange={evt => this.updateInput(evt)} type=\"range\" class=\"form-range\" min=\"1\" max=\"8\" step=\"1\" id=\"diskRange\"\r\n                    style={{height: \"3vh\"}}\r\n                    />\r\n                    <div className=\"white-text\" style={{fontSize: \"2vw\"}}>\r\n                        {this.state.input}\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"tcontainer\">\r\n                        <div class=\"row\" style={{paddingTop: \"10vh\"}}>\r\n\r\n                            <div class=\"col s4\">\r\n                                <div className=\"towercont\" >\r\n                                <div style={{position: \"absolute\",left:\"16.4%\", zIndex: \"-1\", padding: 0, margin: 0, backgroundColor: \"white\", height: `${tower1.length * 2 + 4}vw`, width: \"1vmin\", marginTop: \"-4vw\"}}></div>\r\n                                    {tower1.map((block, id) => {\r\n                                        return <div key={id} className=\"emptyblock\" style={{width: `${block }vw`, height: `2vw`}}></div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col s4\">\r\n                                <div className=\"towercont\">\r\n                                <div style={{position: \"absolute\",left:\"49.7%\", zIndex: \"-1\", padding: 0, margin: 0, backgroundColor: \"white\", height: `${tower1.length * 2 + 4}vw`, width: \"1vmin\", marginTop: \"-4vw\"}}></div>\r\n                                    {tower1.map((block, id) => {\r\n                                        return <div key={id} className=\"emptyblock\" style={{width: `${block}vw`, height: `2vw`}}></div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col s4\">\r\n                                <div className=\"towercont\">\r\n                                <div style={{position: \"absolute\",left:\"83%\", zIndex: \"-1\", padding: 0, margin: 0, backgroundColor: \"white\", height: `${tower1.length * 2 + 4}vw`, width: \"1vmin\", marginTop: \"-4vw\"}}></div>\r\n                                    {tower1.map((block, id) => {\r\n                                        return <div key={id} className=\"emptyblock\" style={{width: `${block}vw`, height: `2vw`}}></div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                    </div>\r\n                    <div className=\"container\" style={{marginTop: \"3vh\"}}>\r\n                    <div class=\"grid-container\">\r\n                            <div className=\"grid-item\">\r\n                                \r\n                                <button className=\" btn\" onClick={() => this.solve()}>\r\n                                    <label className=\"white-text\" style={{fontSize: \"1vw\"}}>solve</label>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"grid-item\">\r\n                                <button className=\"waves-effect waves-light btn\" onClick={() => this.reset()}>\r\n                                    <label className=\"white-text\" style={{fontSize: \"1vw\"}}>reset</label>\r\n                                </button>\r\n                            </div>\r\n\r\n                    </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    <div className=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col s12 m12\">\r\n                        <div class=\"card blue-grey \">\r\n                            <div class=\"card-content white-text\">\r\n                            <h4 class=\"resp-head\">Towers of Hanoi Puzzle Description</h4>\r\n                            <p>The Tower of Hanoi (also called the Tower of Brahma or Lucas' Tower[1] and sometimes pluralized as Towers) is a mathematical game or puzzle. It consists of three rods and a number of disks of different sizes, which can slide onto any rod. The puzzle starts with the disks in a neat stack in ascending order of size on one rod, the smallest at the top, thus making a conical shape.\r\n\r\n                                The objective of the puzzle is to move the entire stack to another rod, obeying the following simple rules:\r\n\r\n                                Only one disk can be moved at a time.\r\n                                Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod.\r\n                                No larger disk may be placed on top of a smaller disk. <a href=\"https://en.wikipedia.org/wiki/Tower_of_Hanoi\" style={{fontSize:\"1vw\"}}>[source]</a>\r\n                                \r\n                                \r\n                            </p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n\r\n                \r\n                \r\n                \r\n                \r\n            </>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\nfunction getBlockId(tower, n, t1, t2, t3) {\r\n\r\n        let toSwap = tower * n;\r\n        if (tower === 1) toSwap -= t1;\r\n        if (tower === 2) toSwap -= t2;\r\n        if (tower === 3) toSwap -= t3;\r\n        return toSwap;\r\n}\r\n\r\nfunction createDisks(numberOfDisks) {\r\n    const disks = [];\r\n    for (let i = 0; i < numberOfDisks; i++) {\r\n        disks.push(i*3 + 3);\r\n    }\r\n    return disks;\r\n}\r\n\r\nfunction shiftDisk(style1, style2) {\r\n        \r\n        style2.width = style1.width;\r\n        style2.height = style1.height;\r\n        style2.backgroundColor = style1.backgroundColor;\r\n        style2.margin = style1.margin;\r\n        style2.boxShadow = style1.boxShadow;\r\n        style1.background = \"transparent\";\r\n        style1.boxShadow = \"0 0 0 0px black\";\r\n}\r\n\r\n\r\nfunction delay(n) {  \r\n    n = n || 2000;\r\n    return new Promise(done => {\r\n       setTimeout(() => {\r\n        done();\r\n        \r\n      }, n);\r\n    });\r\n  }\r\n\r\n// function clearDelay(tim) {\r\n//     clearTimeout(tim);\r\n// }","import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"hide-on-med-and-down\">\r\n                    <div class=\"nav-wrapper\" style={{backgroundColor: \"rgb(250, 85, 151)\", textAlign: \"center\"}}>\r\n                    \r\n                        <div classname=\"navgrid-item\">\r\n                            <div >\r\n                                <p style={{fontSize: \"2vmin\"}}>Towers of Hanoi</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import Hanoi from \"./FrontEnd/hanoi.jsx\";\nimport Navbar from './FrontEnd/Navbar';\nfunction App() {\n  return (\n    <>\n      <Navbar/>\n      <Hanoi/>\n\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}